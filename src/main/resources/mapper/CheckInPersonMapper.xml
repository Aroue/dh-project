<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.dh.hotel.dao.CheckInPersonMapper">
  <resultMap id="BaseResultMap" type="org.dh.hotel.entity.entity.CheckInPerson">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="id_number" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="room_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="order_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="check_in_person_phone" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="CheckInPersonResultMap" type="org.dh.hotel.entity.dto.CheckInPerson.CheckInPersonA01DTO">
    <result property="id" column="id"/>
    <result property="name" column="name"/>
    <result property="idNumber" column="id_number"/>
    <result property="roomId" column="room_id"/>
    <result property="orderId" column="order_id"/>
    <result property="checkInPersonPhone" column="check_in_person_phone"/>
    <result property="roomNumber" column="room_number"/>
    <result property="homeState" column="home_state"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, name, id_number, room_id, order_id, check_in_person_phone
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from check_in_person
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="getOrderCheckInPerson" resultMap="BaseResultMap" >
    select * from check_in_person where order_id = #{id}
  </select>

  <select id="getAllCheckInPerson" resultMap="CheckInPersonResultMap">
    select check_in_person.*,hotel_room.room_number as room_number,hotel_room.home_state as home_state
    from check_in_person inner join hotel_room on check_in_person.room_id = hotel_room.id
    <where>
      <if test="name != null and name != ''">
        check_in_person.name = #{name}
      </if>
      <if test="idNumber != null and idNumber != ''">
        and check_in_person.id_number = #{idNumber}
      </if>
    </where>
    LIMIT #{pageSize,jdbcType=INTEGER} OFFSET #{offset,jdbcType=INTEGER}
  </select>
  <select id="countAllCheckInPerson" resultType="java.lang.Integer">
    select count(*)
    from check_in_person inner join hotel_room on check_in_person.room_id = hotel_room.id
    <where>
      <if test="name != null and name != ''">
        check_in_person.name = #{name}
      </if>
      <if test="idNumber != null and idNumber != ''">
        and check_in_person.id_number = #{idNumber}
      </if>
    </where>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from check_in_person
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.dh.hotel.entity.entity.CheckInPerson">
    insert into check_in_person (id, name, id_number, 
      room_id, order_id, check_in_person_phone
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{idNumber,jdbcType=VARCHAR}, 
      #{roomId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{checkInPersonPhone,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.dh.hotel.entity.entity.CheckInPerson">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into check_in_person
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="idNumber != null">
        id_number,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="checkInPersonPhone != null">
        check_in_person_phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="checkInPersonPhone != null">
        #{checkInPersonPhone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.dh.hotel.entity.entity.CheckInPerson">
    update check_in_person
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        id_number = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="checkInPersonPhone != null">
        check_in_person_phone = #{checkInPersonPhone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.dh.hotel.entity.entity.CheckInPerson">
    update check_in_person
    set name = #{name,jdbcType=VARCHAR},
      id_number = #{idNumber,jdbcType=VARCHAR},
      room_id = #{roomId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      check_in_person_phone = #{checkInPersonPhone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>